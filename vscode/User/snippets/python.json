{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Logging": {
		"prefix": "logging",
		"body": [
			"import logging",
			"",
			"logger = logging.getLogger(__name__)",
			"logger.setLevel(logging.DEBUG)",
			"",
			"ch = logging.StreamHandler()",
			"ch.setLevel(logging.DEBUG)",
			"",
			"formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')",
			"ch.setFormatter(formatter)",
			"",
			"logger.addHandler(ch)",
		],
		"description": "Logging"
	},
	"unittest": {
		"prefix": "unittest",
		"body": [
			"import unittest",
			"",
			"class _Test(unittest.TestCase):",
			"\tdef test_(self):",
			"\t\tactual = ''",
			"\t\texpected = ''",
			"\t\tself.assertEqual(actual, expected)"
		],
		"description": "Logging"
	},

}