#!/bin/zsh
set -euxo

# force flag
FORCE_FLAG=''
print_usage() {
    printf "Usage: Only -f(=force) option is allowed"
}
while getopts 'f' flag; do
    case "${flag}" in
        f) FORCE_FLAG='true' ;;
        *) print_usage
        exit 1 ;;
    esac
done

MACOS=$( cd "$( dirname "$0" )" >/dev/null 2>&1 && pwd )
DOTFILES=$( dirname "$MACOS" )
. "$DOTFILES/lib/colors"
APPLICATIONS="$DOTFILES/bin"

# System Prefernce
source "$APPLICATIONS/macos/.macos"

# install softwares
brew update
brew bundle --file="$MACOS/Brewfile"
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# shell
if [ ! -z ${FORCE_FLAG} ];then
    sudo ln -f $MACOS/shell/shells /etc/shells
    chsh -s /bin/zsh
fi

# zsh
ZDOTDIR="$HOME/.zsh"
rm -rf "$ZDOTDIR"
mkdir -p "$ZDOTDIR"

yes | cp -afl "$APPLICATIONS/shell/zsh/.zsh/".* "$ZDOTDIR/"
yes | cp -afl "$MACOS/shell/zsh/.zsh/".* "$ZDOTDIR/"
ln -fns "$APPLICATIONS/shell/zsh/.zshenv" "$HOME/.zshenv"

ZSH_COMPLETIONS="/usr/local/share/zsh-completions"
mkdir -p "$ZSH_COMPLETIONS"
yes | cp -afl "$APPLICATIONS/shell/zsh/completion/"_* "$ZSH_COMPLETIONS/"

# docker
ln -fns /Applications/Docker.app/Contents/Resources/etc/docker.bash-completion /usr/local/etc/bash_completion.d/docker
ln -fns /Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion /usr/local/etc/bash_completion.d/docker-compose
ln -fns /Applications/Docker.app/Contents/Resources/etc/docker-machine.bash-completion /usr/local/etc/bash_completion.d/docker-machine

ln -fns /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion "${ZSH_COMPLETIONS}/_docker"
ln -fns /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion "${ZSH_COMPLETIONS}/_docker-compose"

# git
yes | cp -afl "$APPLICATIONS/git/".* "$HOME/"

# OneDrive
HOST_NAME=$(uname -n)
MACHINE_NAME=${HOST_NAME%%.*}       # remove network name after .(dot)
ONEDRIVE_DIR=$HOME/OneDrive\ -\ $(whoami)
mkdir -p "${ONEDRIVE_DIR}/Images/Screenshots/$MACHINE_NAME"
defaults write com.apple.screencapture location "${ONEDRIVE_DIR}/Images/Screenshots/$MACHINE_NAME"

# tmux
ln -f "$APPLICATIONS/tmux/.tmux.conf" $HOME/.tmux.conf

# vim
ln -f "$APPLICATIONS/vim/.vimrc" $HOME/.vimrc

# VSCode
VSCODE_USER_SETTING=$HOME/Library/Application\ Support/Code/User
yes | cp -afl "$APPLICATIONS/vscode/User/". "${VSCODE_USER_SETTING}/"
cp -f "$APPLICATIONS/vscode/code" "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code"
source "$APPLICATIONS/vscode/setup"

echo "${GREEN}Packages are successfully installed!!!${NO_COLOR}"
